/*
 * MStorage - storage for notes.
 * 
 * Permission is granted to copy, distribute and/or
 * modify  this  document under  the  terms  of the
 * GNU General Public License
 * 
 * @author: ilya.gulevskiy
 * @email: mstorage.project@gmail.com
 * @date: 2016
 */
package mstorage;

import mstorage.storagecollection.Image;
import java.awt.Toolkit;
import java.awt.Dimension;
import java.awt.image.BufferedImage;
import mstorage.components.ImageItem;
import net.coobird.thumbnailator.Thumbnails;

/**
 *
 * @author ilya.gulevskiy
 */
public class PreviewJFrame extends javax.swing.JFrame {

	protected Image Image;
	public ImageItem ImageItem;
	
	/**
	 * Default size for preview window
	 */
	protected Dimension Dimension = new Dimension(600,600);

	public Image getImage() {
		return Image;
	}
	
	/**
	 * Creates new form PreviewJFrame
	 */
	public PreviewJFrame(ImageItem ii, Image image) {
		this.Image = image;
		this.ImageItem = ii;
		
		initComponents();
		
		this.initMain();
	}

	/**
	 * This method is called from within the constructor to initialize the form.
	 * WARNING: Do NOT modify this code. The content of this method is always
	 * regenerated by the Form Editor.
	 */
	@SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabelPicture = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setResizable(false);

        jLabelPicture.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabelPicture.setVerticalAlignment(javax.swing.SwingConstants.TOP);
        jLabelPicture.setHorizontalTextPosition(javax.swing.SwingConstants.LEFT);
        jLabelPicture.setVerticalTextPosition(javax.swing.SwingConstants.TOP);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabelPicture, javax.swing.GroupLayout.DEFAULT_SIZE, 600, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabelPicture, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 600, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabelPicture;
    private javax.swing.JPanel jPanel1;
    // End of variables declaration//GEN-END:variables

	private void initMain() {
		setIconImage(Toolkit.getDefaultToolkit().getImage(getClass().getResource("/images/picture.32x32.png")));
		this.setTitle(this.Image.getOrigName());
//		this.jLabelPicture.setText(this.Image.getOrigName());
		
		java.io.File picture;
		try {
			picture = new java.io.File(this.Image.getPath().toAbsolutePath().toString());
		} catch (java.lang.NullPointerException e) {
			picture = new java.io.File(getClass().getResource(ImageItem.NotFoundPic).getPath());
		}		
		
		try {
			BufferedImage originalImage = javax.imageio.ImageIO.read(picture);
			
			// Calc how size will be at window
			int origWidth = originalImage.getWidth();
			int origHeight = originalImage.getHeight();
			Dimension screenSize = java.awt.Toolkit.getDefaultToolkit().getScreenSize();
			int scrWidth = (int)screenSize.getWidth() - 150;
			int scrHeight = (int) screenSize.getHeight() - 150;
			
			if (origWidth < scrWidth && origHeight < scrHeight) {
				this.Dimension = new Dimension(origWidth, origHeight);
			}
			else {
				this.Dimension = new Dimension(scrWidth, scrHeight);
			}

			BufferedImage thumbnail = Thumbnails.of(originalImage)
					.size((int)this.Dimension.getWidth(), (int)this.Dimension.getHeight())
					.asBufferedImage();

			// TODO: There increment to Dimension tested only in Win7
			Dimension winSize = new Dimension(thumbnail.getWidth() + 5, thumbnail.getHeight() + 25);
			this.setPreferredSize(winSize);
			
			this.jLabelPicture.setIcon(new javax.swing.ImageIcon(thumbnail));

		} catch (java.io.IOException e) {
			return;
		}
	
	}
}
